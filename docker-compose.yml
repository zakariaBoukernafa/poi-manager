services:
  db:
    image: postgis/postgis:15-3.3
    container_name: poi_manager_db
    environment:
      POSTGRES_DB: ${DB_NAME:-poi_manager}
      POSTGRES_USER: ${DB_USER:-poi_manager}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-poi_manager}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-poi_manager}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: poi_manager_redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build: .
    container_name: poi_manager_web
    command: >
      sh -c "
        python manage.py migrate &&
        python manage.py collectstatic --noinput || echo 'Collectstatic failed, continuing...' &&
        gunicorn --bind 0.0.0.0:8000 --workers 4 poi_manager_project.wsgi:application
      "
    volumes:
      - .:/app
      - static_volume:/app/static
      - media_volume:/app/media
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - DB_HOST=db
      - REDIS_HOST=redis
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  worker:
    build: .
    container_name: poi_manager_worker
    command: python manage.py rqworker default
    volumes:
      - .:/app
    env_file:
      - .env
    environment:
      - DB_HOST=db
      - REDIS_HOST=redis
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

volumes:
  postgres_data:
  static_volume:
  media_volume: